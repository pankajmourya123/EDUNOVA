import express from 'express';
import cors from 'cors';
import bookRoutes from './routes/Book.js';
import userRoutes from './routes/User.js';
import transactionRoutes from './routes/Transaction.js'; // Fixed typo in 'Transaction'
import { errorMiddleware } from './middlewares/error.js'; // Import error middleware

const app = express();

// Middleware
app.use(cors()); // Enables CORS for all routes
app.use(express.json()); // Parses incoming JSON requests

// Routes
app.use('/api/book', bookRoutes); // Book-related routes
app.use('/api/user', userRoutes); // User-related routes
app.use('/api/transaction', transactionRoutes); // Transaction-related routes

// Sample Route
// Sample Route
app.get("/", (req, res) => {
  const apiDetails = {
      message: "Welcome to the Book Rental API!",
      availableEndpoints: {
          "/api/book/search": {
              method: "GET",
              description: "Get books by name or search term"
          },
          "/api/book/rent": {
              method: "GET",
              description: "Get books by rent range"
          },
          "/api/book/category": {
              method: "GET",
              description: "Get books by category, name, and rent range"
          },
          "/api/book/add": {
              method: "POST",
              description: "Add a new book"
          },
          "/api/book/books": {
              method: "GET",
              description: "Get all books"
          },
          "/api/transaction/issue": {
              method: "POST",
              description: "Issue a book"
          },
          "/api/transaction/return": {
              method: "POST",
              description: "Return a book"
          },
          "/api/transaction/users": {
              method: "GET",
              description: "Get users who issued a specific book"
          },
          "/api/transaction/rent-total": {
              method: "GET",
              description: "Get total rent generated by a specific book"
          },
          "/api/transaction/user-books": {
              method: "GET",
              description: "Get books issued to a user"
          },
          "/api/transaction/issued": {
              method: "GET",
              description: "Get books issued in a specific date range"
          },
          "/api/transaction": {
              method: "POST",
              description: "Add a new transaction"
          },
          "/api/user/signup": {
              method: "POST",
              description: "User signup"
          },
          "/api/user/login": {
              method: "POST",
              description: "User login"
          },
          "/api/user": {
              method: "GET",
              description: "Get all users"
          }
      }
  };

  res.status(200).json(apiDetails);
});


// Error middleware
app.use(errorMiddleware); // Use error middleware after routes

export default app;
